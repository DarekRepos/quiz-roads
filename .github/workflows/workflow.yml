name: 'coverage'
on:
    pull_request:
        branches:
            - master
            - main
jobs:
    coverage:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
              # providing tests for "3.8", "3.9", "3.10"
              python-version: ["3.8", "3.9", "3.10"]
        steps:
          - uses: actions/checkout@v3
          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v3
            with:
              python-version: ${{ matrix.python-version }}
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              python -m pip install genbadge[all] pytest coverage
              if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          - name: Generate report with coverage in the console
            run: |
              coverage report -m
          - name: Generate xml report with coverage 
            run: |    
              coverage xml
          - name: Create input file that genbadg will satasfied
            run: |
              mv coverage.xml junit.xml
              mkdir -p reports/junit
              cp junit.xml reports/junit
          - name: Generate badge for counted tests
            run: |
              genbadge tests -v
          - name: Generate coverage xml
            run: |
              coverage xml
          - name: Generate coverage html
            run: |
              coverage html 
          - name: Generate coverage badge
            run: | 
              genbadge coverage
          - name: Lint with flake8
            run: |
              # stop the build if there are Python syntax errors or undefined names
              flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
              # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
              flake8 . --exit-zero --format=html --htmldir ./reports/flake8 --statistics --tee --output-file flake8stats.txt
          - name: generate flake8 badge
            run: |
              genbadge flake8
  